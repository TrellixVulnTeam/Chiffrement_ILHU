{"ast":null,"code":"import _asyncToGenerator from \"/home/alex/Bureau/Chiffrement/Chiffrement/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { MessageService } from '../services/message.service';\nimport { Client } from '../ModÃ¨le/Client';\nlet TchatComponent = class TchatComponent {\n  constructor(client, socket, route) {\n    this.client = client;\n    this.socket = socket;\n    this.route = route;\n    this.messages = [];\n    this.message = \"\";\n    this.destinataire = \"\";\n    this.name = \"\";\n    this.id = \"\";\n    this.clients = [];\n    this.messageService = new MessageService(socket);\n    this.getReceiveInformation();\n    this.createClient();\n    this.getConnected();\n    this.getMessage();\n  }\n\n  createClient() {\n    this.route.queryParams.subscribe(params => {\n      this.client.age = params.age;\n      this.client.setName(params.username);\n    });\n    console.log(\"Clients size :\" + this.clients.length);\n    this.client = this.getClientByName(this.client.getName(), this.client.getAge());\n\n    if (this.client != undefined) {\n      this.messageService.createClient(this.client);\n      this.clients.push(this.client);\n    }\n  }\n\n  getConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      while (true) {\n        _this.socket.emit('NumberClient');\n\n        yield new Promise(r => setTimeout(r, 2000));\n      }\n    })();\n  }\n\n  getReceiveInformation() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.getServerMessage();\n\n      _this2.getNumberUser();\n    })();\n  }\n\n  getServerMessage() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.socket.on('client', data => {\n        if (data.id_envoyeur != _this3.client.id) _this3.messages.push(data.message);\n      });\n    })();\n  }\n\n  getMessage() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.socket.on('sendTo', message => {\n        _this4.messages.push(message);\n      });\n    })();\n  }\n\n  getNumberUser() {\n    this.socket.on('clients', data => {\n      for (let i = 0; i < data.length; i++) {\n        var client = new Client();\n        client.setId(data[i].client.id);\n        client.setName(data[i].client.name);\n        client.setAge(data[i].client.age);\n        client.setSocket(data[i].id_socket);\n\n        if (!this.clientAlreadyExist(client)) {\n          this.clients.push(client);\n        }\n      }\n    });\n  }\n\n  clientAlreadyExist(client) {\n    for (let i = 0; i < this.clients.length; i++) {\n      if (this.clients[i].getName() == client.getName() && this.clients[i].getAge() == client.getAge()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  onSubmit() {\n    this.kindOfSend();\n    this.messages.push(this.message);\n    this.message = \"\";\n  }\n\n  kindOfSend() {\n    if (this.destinataire == \"Broadcast\") {\n      this.broadcastMessage(this.client.id, this.message);\n    } else {\n      var clientSelect = this.getClientByName(this.destinataire, this.client.getAge());\n      this.sendMessageTo(clientSelect, this.message);\n    }\n  }\n\n  sendMessageTo(destinataire, message) {\n    this.messageService.sendMessageTo(destinataire, message);\n  }\n\n  broadcastMessage(idclient, message) {\n    this.messageService.broadCastMessage(idclient, message);\n  }\n\n  getClientByName(name, age) {\n    let client = this.clients.find(v => v.name == name);\n    return client == undefined ? undefined : client;\n  }\n\n  getClient() {\n    return this.client;\n  }\n\n  ngOnInit() {\n    console.log(\"Parent component initialized\");\n  }\n\n  ngOnDestroy() {\n    console.log(\"Parent component destroyed\");\n  }\n\n};\n\n__decorate([Input()], TchatComponent.prototype, \"messages\", void 0);\n\n__decorate([Input()], TchatComponent.prototype, \"message\", void 0);\n\n__decorate([Input()], TchatComponent.prototype, \"destinataire\", void 0);\n\n__decorate([Input()], TchatComponent.prototype, \"name\", void 0);\n\n__decorate([Input()], TchatComponent.prototype, \"id\", void 0);\n\nTchatComponent = __decorate([Component({\n  selector: 'app-tchat',\n  templateUrl: './tchat.component.html',\n  styleUrls: ['./tchat.component.css']\n})], TchatComponent);\nexport { TchatComponent };","map":{"version":3,"sources":["/home/alex/Bureau/Chiffrement/Chiffrement/frontend/src/app/tchat/tchat.component.ts"],"names":["__decorate","Component","Input","MessageService","Client","TchatComponent","constructor","client","socket","route","messages","message","destinataire","name","id","clients","messageService","getReceiveInformation","createClient","getConnected","getMessage","queryParams","subscribe","params","age","setName","username","console","log","length","getClientByName","getName","getAge","undefined","push","emit","Promise","r","setTimeout","getServerMessage","getNumberUser","on","data","id_envoyeur","i","setId","setAge","setSocket","id_socket","clientAlreadyExist","onSubmit","kindOfSend","broadcastMessage","clientSelect","sendMessageTo","idclient","broadCastMessage","find","v","getClient","ngOnInit","ngOnDestroy","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { MessageService } from '../services/message.service';\nimport { Client } from '../ModÃ¨le/Client';\nlet TchatComponent = class TchatComponent {\n    constructor(client, socket, route) {\n        this.client = client;\n        this.socket = socket;\n        this.route = route;\n        this.messages = [];\n        this.message = \"\";\n        this.destinataire = \"\";\n        this.name = \"\";\n        this.id = \"\";\n        this.clients = [];\n        this.messageService = new MessageService(socket);\n        this.getReceiveInformation();\n        this.createClient();\n        this.getConnected();\n        this.getMessage();\n    }\n    createClient() {\n        this.route.queryParams.subscribe(params => {\n            this.client.age = params.age;\n            this.client.setName(params.username);\n        });\n        console.log(\"Clients size :\" + this.clients.length);\n        this.client = this.getClientByName(this.client.getName(), this.client.getAge());\n        if (this.client != undefined) {\n            this.messageService.createClient(this.client);\n            this.clients.push(this.client);\n        }\n    }\n    async getConnected() {\n        while (true) {\n            this.socket.emit('NumberClient');\n            await new Promise(r => setTimeout(r, 2000));\n        }\n    }\n    async getReceiveInformation() {\n        this.getServerMessage();\n        this.getNumberUser();\n    }\n    async getServerMessage() {\n        this.socket.on('client', (data) => {\n            if (data.id_envoyeur != this.client.id)\n                this.messages.push(data.message);\n        });\n    }\n    async getMessage() {\n        this.socket.on('sendTo', (message) => {\n            this.messages.push(message);\n        });\n    }\n    getNumberUser() {\n        this.socket.on('clients', (data) => {\n            for (let i = 0; i < data.length; i++) {\n                var client = new Client();\n                client.setId(data[i].client.id);\n                client.setName(data[i].client.name);\n                client.setAge(data[i].client.age);\n                client.setSocket(data[i].id_socket);\n                if (!this.clientAlreadyExist(client)) {\n                    this.clients.push(client);\n                }\n            }\n        });\n    }\n    clientAlreadyExist(client) {\n        for (let i = 0; i < this.clients.length; i++) {\n            if (this.clients[i].getName() == client.getName() && this.clients[i].getAge() == client.getAge()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onSubmit() {\n        this.kindOfSend();\n        this.messages.push(this.message);\n        this.message = \"\";\n    }\n    kindOfSend() {\n        if (this.destinataire == \"Broadcast\") {\n            this.broadcastMessage(this.client.id, this.message);\n        }\n        else {\n            var clientSelect = this.getClientByName(this.destinataire, this.client.getAge());\n            this.sendMessageTo(clientSelect, this.message);\n        }\n    }\n    sendMessageTo(destinataire, message) {\n        this.messageService.sendMessageTo(destinataire, message);\n    }\n    broadcastMessage(idclient, message) {\n        this.messageService.broadCastMessage(idclient, message);\n    }\n    getClientByName(name, age) {\n        let client = this.clients.find(v => v.name == name);\n        return client == undefined ? undefined : client;\n    }\n    getClient() {\n        return this.client;\n    }\n    ngOnInit() {\n        console.log(\"Parent component initialized\");\n    }\n    ngOnDestroy() {\n        console.log(\"Parent component destroyed\");\n    }\n};\n__decorate([\n    Input()\n], TchatComponent.prototype, \"messages\", void 0);\n__decorate([\n    Input()\n], TchatComponent.prototype, \"message\", void 0);\n__decorate([\n    Input()\n], TchatComponent.prototype, \"destinataire\", void 0);\n__decorate([\n    Input()\n], TchatComponent.prototype, \"name\", void 0);\n__decorate([\n    Input()\n], TchatComponent.prototype, \"id\", void 0);\nTchatComponent = __decorate([\n    Component({\n        selector: 'app-tchat',\n        templateUrl: './tchat.component.html',\n        styleUrls: ['./tchat.component.css']\n    })\n], TchatComponent);\nexport { TchatComponent };\n"]},"metadata":{},"sourceType":"module"}